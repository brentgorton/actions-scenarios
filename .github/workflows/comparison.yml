name: Test

on: push

jobs:
  files:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.get-files.outputs.tests }}
      to_deploy: ${{ steps.get-files.outputs.to_deploy }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: jitterbit/get-changed-files@v1
        id: files
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Printing
        id: get-files
        run: |
          to_deploy=
          tests=
          for o in ${{ steps.files.outputs.added_modified }}; do
            if [[ "$o" == *.cls ]]
            then
              if [ -z "$to_deploy"]
              then
                echo "Adding classes"
              else
                to_deploy="$to_deploy,"
              fi
              to_deploy="$to_deploy$o"
              if test -f "${o/.cls/Test.cls}";
              then
                to_deploy="$to_deploy,${o/.cls/Test.cls}"
                if [ -z "$tests"]
                then
                  echo "Adding Tests"
                else
                  tests="$tests,"
                fi
                tests="$tests${o/.cls/Test.cls}"
              fi
            else
              echo "$o is not a class"
            fi
          done
          echo "to_deploy=$to_deploy >> $GITHUB_OUTPUT"
          echo "tests=$tests >> $GITHUB_OUTPUT"

          echo "$to_deploy"
          echo "All:"
          echo "${{ steps.files.outputs.all }}"
          echo "Added:"
          echo "${{ steps.files.outputs.added }}"
          echo "Removed:"
          echo "${{ steps.files.outputs.removed }}"
          echo "Renamed:"
          echo "${{ steps.files.outputs.renamed }}"
          echo "Modified:"
          echo "${{ steps.files.outputs.modified }}"
          echo "Added+Modified:"
          echo "${{ steps.files.outputs.added_modified }}"
  print:
    runs-on: ubuntu-latest
    needs: [ files ]
    steps:
      - run: |
        echo "sfdx force source deploy -p ${{needs.files.outputs.to_deploy}} -l RunSpecifiedTests -r ${{needs.files.outputs.tests}}"